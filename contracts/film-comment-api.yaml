openapi: 3.0.0
info:
  title: Film Comment Service
  version: '0.1'
  description: Film Comment Service

tags:
  - name: film-comment-controller
    description: Film Comment Controller

paths:
  /api/film-comment:
    post:
      operationId: createComment
      tags:
        - film-comment-controller
      summary: Post a new comment for the film
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertComment'
      responses:
        200:
          description: Id of the created comment
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    get:
      operationId: getCommentsByCriteria
      tags:
        - film-comment-controller
      summary: Get comments list for a film
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CommentCriteria'
      responses:
        200:
          description: List of comments for the film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-comment/{commentId}:
    get:
      operationId: getComment
      tags:
        - film-comment-controller
      summary: Get a single comment by id
      parameters:
        - $ref: '#/components/parameters/CommentIdParam'
      responses:
        200:
          description: The requested comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    put:
      operationId: updateComment
      tags:
        - film-comment-controller
      summary: Edit a comment
      parameters:
        - $ref: '#/components/parameters/CommentIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertComment'
      responses:
        204:
          description: Comment updated successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    delete:
      operationId: deleteComment
      tags:
        - film-comment-controller
      summary: Delete a comment
      parameters:
        - $ref: '#/components/parameters/CommentIdParam'
      responses:
        204:
          description: Comment deleted successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

components:
  parameters:
    CommentIdParam:
      name: commentId
      in: path
      required: true
      schema:
        type: integer
      description: Id of the comment

  schemas:
    CommentCriteria:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseCriteria'
        - type: object
          properties:
            filmId:
              type: integer

    CommentList:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseList'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
          required:
            - items

    UpsertComment:
      type: object
      properties:
        filmId:
          type: integer
        text:
          type: string
          maxLength: 2000
      required:
        - filmId
        - text

    Comment:
      allOf:
        - $ref: '#/components/schemas/UpsertComment'
        - type: object
          properties:
            id:
              type: integer
            createdAt:
              type: string
              format: date-time
            authorId:
              type: integer
            authorUserName:
              type: string
            authorRating:
              type: integer
          required:
            - id
            - createdAt
            - authorId
            - authorUserName