openapi: 3.0.0
info:
  title: Film Collection Service
  version: '0.1'
  description: API for managing film collections

tags:
  - name: film-collection-controller
    description: Film Collection Controller

paths:
  /api/film-collections:
    get:
      operationId: getFilmCollectionsByCriteria
      tags:
        - film-collection-controller
      summary: Get list of film collections filtered by criteria
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/FilmCollectionCriteria'
      responses:
        200:
          description: List of collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmCollectionList'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    post:
      operationId: createFilmCollection
      tags:
        - film-collection-controller
      summary: Create a new film collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertFilmCollection'
      responses:
        200:
          description: Id of the created collection
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-collections/{collectionId}:
    parameters:
      - $ref: '#/components/parameters/CollectionId'

    get:
      operationId: getFilmCollection
      tags:
        - film-collection-controller
      summary: Get a film collection by ID
      responses:
        200:
          description: Collection by provided id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmCollection'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'

    put:
      operationId: updateFilmCollection
      tags:
        - film-collection-controller
      summary: Update a film collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertFilmCollection'
      responses:
        204:
          description: Updated successfully
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'

    delete:
      operationId: deleteFilmCollection
      tags:
        - film-collection-controller
      summary: Delete a film collection
      responses:
        204:
          description: Deleted successfully
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
  /api/film-collections/{collectionId}/films/{filmId}:
    parameters:
      - $ref: '#/components/parameters/CollectionId'
      - $ref: '#/components/parameters/FilmId'

    post:
      operationId: addFilmToCollection
      tags:
        - film-collection-controller
      summary: Add a film to a collection
      responses:
        204:
          description: Film added successfully
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'

    delete:
      operationId: removeFilmFromCollection
      tags:
        - film-collection-controller
      summary: Remove a film from a collection
      responses:
        204:
          description: Film removed successfully
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'

  /api/film-collections/{collectionId}/films:
    parameters:
      - $ref: '#/components/parameters/CollectionId'

    delete:
      operationId: clearCollection
      tags:
        - film-collection-controller
      summary: Remove all films from a collection
      responses:
        204:
          description: All films removed successfully
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'

components:
  parameters:
    CollectionId:
      name: collectionId
      in: path
      required: true
      schema:
        type: integer
    FilmId:
      name: filmId
      in: path
      required: true
      schema:
        type: integer

  schemas:
    UpsertFilmCollection:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 5000
      required:
        - name

    FilmCollection:
      allOf:
        - $ref: '#/components/schemas/UpsertFilmCollection'
        - type: object
          properties:
            id:
              type: integer
            films:
              type: array
              items:
                $ref: '../contracts/film-api.yaml#/components/schemas/Film'

    FilmCollectionList:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseList'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/FilmCollection'
          required:
            - items

    FilmCollectionCriteria:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseCriteria'
        - type: object
          properties:
            query:
              type: string
            ownerId:
              type: integer
