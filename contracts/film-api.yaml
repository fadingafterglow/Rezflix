openapi: 3.0.0
info:
  description: Film Service
  version: '0.1'
  title: Film Service

tags:
  - name: film-info-controller
    description: Film Info Controller
  - name: film-comments-controller
    description: Film Comments Controller

paths:
  /api/film-info:
    post:
      operationId: createFilm
      tags:
        - film-info-controller
      summary: Create a new film
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilm'
      responses:
        201:
          description: Id of the created film
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-info/{filmId}:
    get:
      operationId: getFilm
      tags:
        - film-info-controller
      summary: Get film info
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        200:
          description: Film by provided id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    put:
      operationId: updateFilm
      tags:
        - film-info-controller
      summary: Update film info
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilm'
      responses:
        204:
          description: Film was updated successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    delete:
      operationId: deleteFilm
      tags:
        - film-info-controller
      summary: Delete the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        204:
          description: Film was deleted successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-info/{filmId}/rating:
    put:
      operationId: setUserRating
      tags:
        - film-info-controller
      summary: Set user's rating for the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateFilm'
      responses:
        204:
          description: User's rating was set successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    get:
      operationId: getUserRating
      tags:
        - film-info-controller
      summary: Get user's rating for the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        200:
          description: User's rating for the film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateFilm'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    delete:
      operationId: deleteUserRating
      tags:
        - film-info-controller
      summary: Remove user's rating for the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        204:
          description: User's rating was removed successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-comments/{filmId}:
    post:
      operationId: createComment
      tags:
        - film-comments-controller
      summary: Post a new comment for the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComment'
      responses:
        201:
          description: Id of the created comment
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    get:
      operationId: getCommentsList
      tags:
        - film-comments-controller
      summary: Get comments list for a film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        200:
          description: List of comments for the film
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film-comments/{filmId}/{commentId}:
    get:
      operationId: getComment
      tags:
        - film-comments-controller
      summary: Get a single comment by id
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
        - $ref: '#/components/parameters/CommentIdParam'
      responses:
        200:
          description: The requested comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          description: Comment not found
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    put:
      operationId: updateComment
      tags:
        - film-comments-controller
      summary: Edit a comment
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
        - $ref: '#/components/parameters/CommentIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComment'
      responses:
        204:
          description: Comment updated successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          description: Comment not found
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    delete:
      operationId: deleteComment
      tags:
        - film-comments-controller
      summary: Delete a comment
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
        - $ref: '#/components/parameters/CommentIdParam'
      responses:
        204:
          description: Comment deleted successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          description: Comment not found
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

components:
  parameters:
    FilmIdParam:
      name: filmId
      in: path
      required: true
      schema:
        type: integer
      description: Id of the film

    CommentIdParam:
      name: commentId
      in: path
      required: true
      schema:
        type: integer
      description: Id of the comment

  schemas:
    CreateFilm:
      allOf:
        - $ref: '#/components/schemas/UpdateFilm'

    Film:
      allOf:
        - $ref: '#/components/schemas/UpdateFilm'
        - type: object
          properties:
            totalRating:
              type: number
              minimum: 0
              maximum: 5
            currentUserRating:
              type: integer
              minimum: 1
              maximum: 5
          required:
            - rating

    UpdateFilm:
      type: object
      properties:
        title:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 5000
      required:
        - title
        - description

    RateFilm:
      type: object
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
      required:
        - rating

    Comment:
        allOf:
          - $ref: '#/components/schemas/UpdateComment'
          - type: object
            properties:
              id:
                type: integer
              text:
                type: string
              createdAt:
                type: string
                format: date-time
              authorId:
                type: integer
              authorUserName:
                type: string
              authorRating:
                type: integer
            required:
              - id
              - text
              - createdAt
              - userId
              - authorUserName

    CreateComment:
      allOf:
        - $ref: '#/components/schemas/UpdateComment'

    UpdateComment:
      type: object
      properties:
        text:
          type: string
          maxLength: 2000
      required:
        - text