openapi: 3.0.0
info:
  description: Film Service
  version: '0.1'
  title: Film Service

tags:
  - name: film-controller
    description: Film Controller

paths:
  /api/film:
    post:
      operationId: createFilm
      tags:
        - film-controller
      summary: Create a new film
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilm'
      responses:
        200:
          description: Id of the created film
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    get:
      operationId: getFilmsByCriteria
      tags:
        - film-controller
      summary: Get films list
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/FilmsListCriteria'
      responses:
        200:
          description: List of films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmsList'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/film/{filmId}:
    get:
      operationId: getFilm
      tags:
        - film-controller
      summary: Get the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        200:
          description: Film by provided id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    put:
      operationId: updateFilm
      tags:
        - film-controller
      summary: Update the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilm'
      responses:
        204:
          description: Film was updated successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    delete:
      operationId: deleteFilm
      tags:
        - film-controller
      summary: Delete the film
      parameters:
        - $ref: '#/components/parameters/FilmIdParam'
      responses:
        204:
          description: Film was deleted successfully
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

components:
  parameters:
    FilmIdParam:
      name: filmId
      in: path
      required: true
      schema:
        type: integer
      description: Id of the film

  schemas:
    FilmsListCriteria:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseCriteria'

    FilmsList:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseList'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Film'
          required:
            - items

    CreateFilm:
      allOf:
        - $ref: '#/components/schemas/UpdateFilm'

    Film:
      allOf:
        - $ref: '#/components/schemas/UpdateFilm'
        - type: object
          properties:
            totalRating:
              type: number
              minimum: 0
              maximum: 5
            currentUserRating:
              type: integer
              minimum: 1
              maximum: 5
          required:
            - rating

    UpdateFilm:
      type: object
      properties:
        title:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 5000
      required:
        - title
        - description